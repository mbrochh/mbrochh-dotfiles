{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"useQuery": {
		"prefix": "USEQUERY",
		"body": [
			"import gql from 'graphql-tag'",
			"import { useQuery } from '@apollo/react-hooks'",
			"const query = gql``",
			"const variables = {}",
			"const { data } = useQuery(query, { variables })",
		]
	},
	"JSX": {
		"prefix": "JSX",
		"body": [
			"/** @jsx jsx */",
			"import { jsx } from '@emotion/react'",
		]
	},
	"RFC": {
		"prefix": "RFC",
		"body": [
			"import React from 'react'",
			"",
			"interface Props {",
			"  whatever?: boolean",
			"}",
			"",
			"const $1: React.FC<Props> = props => {",
			"  const { whatever } = props",
			"",
			"  return <div>$1</div>",
			"}",
			"",
			"export default $1",
		]
	},
	"dangerouslySetInnerHTML": {
		"prefix": "DSIHTML",
		"body": [
			"function createMarkup(content: string) {",
			"  return { __html: content.replace(/\\n/g, '<br />') }",
			"}",
			"<P dangerouslySetInnerHTML={createMarkup(VALUE)} />",
		]
	}
}